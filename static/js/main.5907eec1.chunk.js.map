{"version":3,"sources":["Phonebook/ContactList/ContactList.module.css","Phonebook/Filter/Filter.module.css","Phonebook/Phonebook.module.css","redux/contacts-actions.js","Phonebook/Phonebook-selectors.js","Phonebook/Form/Form.jsx","Phonebook/ContactList/ContactList.jsx","Phonebook/Filter/Filter.jsx","Phonebook/Phonebook.jsx","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Phonebook/Form/Form.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","getFilter","state","contacts","filter","getItems","items","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","Form","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","className","style","mainForm","onSubmit","preventDefault","undefined","find","item","contactsActions","id","uuidv4","alert","labelForm","inputForm","type","pattern","title","required","onChange","buttonForm","ContactList","map","contactListItem","btnDeleteContact","onClick","numberPhone","Filter","filterContainer","labelFilter","inputFilter","target","Phonebook","mainSection","containerContacts","App","createReducer","actionTypes","payload","contact","_","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5907eec1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDeleteContact\":\"ContactList_btnDeleteContact__1_IIj\",\"contactListItem\":\"ContactList_contactListItem__4Oafy\",\"numberPhone\":\"ContactList_numberPhone__pjHD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__1Te0k\",\"labelFilter\":\"Filter_labelFilter__2kJjr\",\"inputFilter\":\"Filter_inputFilter__25KyA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"Phonebook_mainSection__1gGSQ\",\"containerContacts\":\"Phonebook_containerContacts__2_pDc\"};","import { createAction } from \"@reduxjs/toolkit\";\nconst addContact = createAction(\"contacts/add\");\nconst deleteContact = createAction(\"contacts/delete\");\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","export const getFilter = (state) => state.contacts.filter;\nexport const getItems = (state) => state.contacts.items;\n\nexport const getVisibleContacts = (state) => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport style from \"./Form.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts-actions\";\r\nimport { getItems } from \"../Phonebook-selectors\";\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkedDuplicate = () => {\r\n    return items.find((item) => item.name.toLowerCase() === name.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (checkedDuplicate() !== undefined) {\r\n      alert(`${name} is alreade in contacts.`);\r\n      return;\r\n    }\r\n\r\n    dispatch(\r\n      contactsActions.addContact({\r\n        name,\r\n        id: uuidv4(),\r\n        number,\r\n      })\r\n    );\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.mainForm} onSubmit={handleSubmit}>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Name\r\n      </label>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Number\r\n      </label>\r\n      <button className={style.buttonForm} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts-actions\";\r\nimport React from \"react\";\r\nimport style from \"./ContactList.module.css\";\r\nimport { getVisibleContacts } from \"../Phonebook-selectors\";\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(getVisibleContacts);\r\n\r\n  return (\r\n    <ul>\r\n      {items.map((item) => (\r\n        <li key={item.id} className={style.contactListItem}>\r\n          <button\r\n            className={style.btnDeleteContact}\r\n            type=\"button\"\r\n            onClick={() => dispatch(contactsActions.deleteContact(item.id))}\r\n          >\r\n            delete\r\n          </button>\r\n          {item.name}: <span className={style.numberPhone}>{item.number}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport style from \"./Filter.module.css\";\r\nimport contactsActions from \"../../redux/contacts-actions\";\r\nimport { getFilter } from \"../Phonebook-selectors\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  return (\r\n    <div className={style.filterContainer}>\r\n      <label className={style.labelFilter}>\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={(e) =>\r\n            dispatch(contactsActions.changeFilter(e.target.value))\r\n          }\r\n        />\r\n        Find contacts by name\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n","import Form from \"./Form\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport style from \"./Phonebook.module.css\";\r\n\r\nexport default function Phonebook() {\r\n  return (\r\n    <section className={style.mainSection}>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n\r\n      <div className={style.containerContacts}>\r\n        <h2>Contacts:</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Phonebook from \"./Phonebook\";\n\nexport default function App() {\n  return <Phonebook />;\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actionTypes from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actionTypes.addContact]: (state, { payload }) => [...state, payload],\n  [actionTypes.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actionTypes.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Form_mainForm__w8_sy\",\"labelForm\":\"Form_labelForm__3Wosz\",\"inputForm\":\"Form_inputForm__18qGx\",\"buttonForm\":\"Form_buttonForm__2ELsg\"};"],"sourceRoot":""}